# версия синтаксиса
version: "3"
services:
  app:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php # имя будущего образа
    container_name: app # имя контейнера после запуска
    links:
      - mysql
    volumes:
       - ./code:/var/www/html
       - /var/www/html/vendor
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - adtech-network
 
  #контейнер с Nginx
  webserver:
  #  build:
  #    context: ./nginx
  #    dockerfile: Dockerfile
  #  image: myapp/nginx
    image: nginx:latest
    container_name: webserver
    volumes:
       - ./code:/var/www/html
       - /var/www/html/vendor
       - ./nginx:/etc/nginx/conf.d
    links:
       - app
    # проброс портов
    ports:
      - "80:80"
      - "443:443"
    networks:
      - adtech-network

  # контейнер с phpmyadmin
  phpmyadmin:
    image: phpmyadmin:latest 
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - "8000:80"
    depends_on:
      - mysql
    networks:
      - adtech-network        
 
  # контейнер с MySQL
  # строим на базе стандартного образа
  mysql:
    image: mysql:latest
    container_name: db
    ports:
      - "3400:3306"
    # описываем, какую БД мы создаём
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASS
    volumes:
      - ./dbdata:/var/lib/mysql  
      - ./data:/docker-entrypoint-initdb.d
    networks:
      - adtech-network
networks:
  adtech-network:
    driver: bridge