{"version":3,"file":"script3.js","mappings":";;;;;;;;;;;;;;;AAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,YAAY,wDAAW;AACvB,QAAQ;AACR;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,iEAAe,QAAQ;;;;;;;;;;;;;;AClBvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iEAAe,QAAQ;;;;;;;;;;;;;;AChMvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY,UAAU,WAAW;AAC7E,0CAA0C,iBAAiB;AAC3D,0CAA0C,cAAc;AACxD,oDAAoD,SAAS;AAC7D;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,SAAS;AACT,kBAAkB;AAClB,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,WAAW;;;;;;UClK1B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN0C;AACA;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,6DAAQ;AACV;AACA,EAAE,6DAAQ;AACV;AACA,CAAC;AACD","sources":["webpack://chat/./src/modules/getState.js","webpack://chat/./src/modules/makeGraf.js","webpack://chat/./src/modules/renderUsers.js","webpack://chat/webpack/bootstrap","webpack://chat/webpack/runtime/define property getters","webpack://chat/webpack/runtime/hasOwnProperty shorthand","webpack://chat/webpack/runtime/make namespace object","webpack://chat/./src/main.js"],"sourcesContent":["import renderUsers from \"./renderUsers\";\r\n\r\nasync function getState(state) {\r\n\r\n    await axios.get('/get/getUserList').then(res => {\r\n         state.userList = res.data;\r\n         console.log('state.userList', state.userList);\r\n        })\r\n        .then(() => {\r\n            console.log('Загрузка данных выполнена!');\r\n            renderUsers(state);\r\n       })   \r\n        .catch(function(error) {\r\n         console.log(\"Ошибка базы данных \" + error);\r\n      });\r\n\r\n};\r\n\r\nexport default getState;","const makeGraf = (state, name1, name2) => {\r\n\r\n  const ctx = document.getElementById('myChart');\r\n  const btnYear = document.getElementById(\"graf1\");\r\n  const btnMonth = document.getElementById(\"graf2\");\r\n  const btnDay = document.getElementById(\"graf3\");\r\n  const summaryGraf = document.querySelector(\".grafTag\");\r\n  let chartStatus;\r\n\r\n  changeGraf();\r\n  getYearGrafFromDB();\r\n\r\n    function changeGraf() {\r\n        btnYear.addEventListener( \"click\", getYearGrafFromDB);    \r\n        btnMonth.addEventListener( \"click\", getMonthGrafFromDB);    \r\n        btnDay.addEventListener( \"click\", getDayGrafFromDB);    \r\n    }\r\n\r\n    function updateTextSummary() {\r\n        summaryGraf.textContent = 'Итого за период: доходы - ' + state.total.toFixed(2) + ' руб, переходы - '+ state.sum + ', отказы - ' + state.reject + ', выданные ссылки - ' + state.links ;\r\n    }\r\n\r\n    function getCountLinksAndRejectYear() {\r\n        axios.get('/get/countLinksAndRejectYear').then(res => {\r\n            state.links = res.data[0];\r\n            state.reject = res.data[1];\r\n            console.log(state.links, state.reject);\r\n        })\r\n        .then(() => {\r\n            updateTextSummary();\r\n        })\r\n            .catch(function(error) {\r\n            console.log(\"Ошибка базы данных \" + error);\r\n         });\r\n    }\r\n\r\n    function getCountLinksAndRejectMonth() {\r\n        axios.get('/get/countLinksAndRejectMonth').then(res => {\r\n            state.links = res.data[0];\r\n            state.reject = res.data[1];\r\n            console.log(state.links, state.reject);\r\n        })\r\n        .then(() => {\r\n            updateTextSummary();\r\n        })\r\n            .catch(function(error) {\r\n            console.log(\"Ошибка базы данных \" + error);\r\n         });\r\n    }\r\n\r\n    function getCountLinksAndRejectDay() {\r\n        axios.get('/get/countLinksAndRejectDay').then(res => {\r\n            state.links = res.data[0];\r\n            state.reject = res.data[1];\r\n            console.log(state.links, state.reject);\r\n        })\r\n        .then(() => {\r\n            updateTextSummary();\r\n        })\r\n            .catch(function(error) {\r\n            console.log(\"Ошибка базы данных \" + error);\r\n         });\r\n    }\r\n\r\n    function getYearGrafFromDB() {\r\n        state.sum = 0;\r\n        state.total = 0;\r\n        state.reject = 0;\r\n        state.links = 0;\r\n        getCountLinksAndRejectYear();\r\n        axios.get('/get/getYearGrafAdmin').then(res => {\r\n                state.yearData1 = res.data.map(item => {\r\n                    state.total += Number(item['total']);    \r\n                    return item['total'] === null ? 0 : item['total'];\r\n                });\r\n\t            state.yearData2 = res.data.map(item => {\r\n                    state.sum += Number(item['sum']);\r\n                    return item['sum'] === null ? 0 : item['sum'];\r\n                });\r\n                console.log('state.yearData1', state.yearData1);\r\n                console.log('state.yearData2', state.yearData2);\r\n            }) .then(() => {\r\n                console.log('Загрузка графика выполнена!');\r\n                yearGraf();\r\n                updateTextSummary();\r\n            })\r\n            .catch(function(error) {\r\n            console.log(\"Ошибка базы данных \" + error);\r\n        });\r\n    } \r\n\r\n    function getMonthGrafFromDB() {\r\n        state.sum = 0;\r\n        state.total = 0;\r\n        state.reject = 0;\r\n        state.links = 0;\r\n        getCountLinksAndRejectMonth();\r\n        axios.get('/get/getMonthGrafAdmin').then(res => {\r\n                state.monthData1 = res.data.map(item => {\r\n                    state.total += Number(item['total']);    \r\n                    return item['total'] === null ? 0 : item['total'];\r\n                });\r\n                state.monthData2 = res.data.map(item => {\r\n                    state.sum += Number(item['sum']);\r\n                    return item['sum'] === null ? 0 : item['sum'];\r\n                });\r\n                console.log('state.monthData1', state.monthData1);\r\n                console.log('state.monthData2', state.monthData2);\r\n            }) .then(() => {\r\n                console.log('Загрузка графика выполнена!');\r\n                monthGraf();\r\n                updateTextSummary();\r\n            })\r\n            .catch(function(error) {\r\n            console.log(\"Ошибка базы данных \" + error);\r\n        });\r\n    } \r\n\r\n    function getDayGrafFromDB() {\r\n        state.sum = 0;\r\n        state.total = 0;\r\n        state.reject = 0;\r\n        state.links = 0;\r\n        getCountLinksAndRejectDay();\r\n        axios.get('/get/getDayGrafAdmin').then(res => {\r\n                state.dayData1 = res.data.map(item => {\r\n                    state.total += Number(item['total']);    \r\n                    return item['total'] === null ? 0 : item['total'];\r\n                });\r\n                state.dayData2 = res.data.map(item => {\r\n                    state.sum += Number(item['sum']);\r\n                    return item['sum'] === null ? 0 : item['sum'];\r\n                });\r\n                console.log('state.dayData1', state.dayData1);\r\n                console.log('state.dayData2', state.dayData2);\r\n            }) .then(() => {\r\n                console.log('Загрузка графика выполнена!');\r\n                dayGraf();\r\n                updateTextSummary();\r\n            })\r\n            .catch(function(error) {\r\n            console.log(\"Ошибка базы данных \" + error);\r\n        });\r\n    } \r\n\r\n    function yearGraf() {\r\n        initGraf(state.yearLabels, name1, name2, state.yearData1, state.yearData2);\r\n    }\r\n\r\n    function monthGraf() {\r\n        initGraf(state.monthLabels, name1, name2, state.monthData1, state.monthData2);\r\n    }\r\n\r\n    function dayGraf() {\r\n        initGraf(state.dayLabels, name1, name2, state.dayData1, state.dayData2);\r\n    }\r\n\r\n    function initGraf(labels, name1, name2, data1, data2) {\r\n        if (chartStatus != undefined) {\r\n            chartStatus.destroy();\r\n          }\r\n        chartStatus = new Chart(ctx, {\r\n            type: 'bar',\r\n            data: {\r\n            labels: labels,\r\n            datasets: [{\r\n                label: name1,\r\n                data: data1,\r\n                borderWidth: 1,\r\n                backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n                borderColor: 'rgba(255,99,132,1)',\r\n            }, {\r\n                label: name2,\r\n                data: data2,\r\n                borderWidth: 1,\r\n                backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n                borderColor: 'rgba(54, 162, 235, 1)',\r\n            }],\r\n            options: {\r\n            scales: {\r\n                y: {\r\n                    beginAtZero: true\r\n                }\r\n                }\r\n            }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default makeGraf;","const renderUsers = (state) => {\r\n\r\n    const divTable =  document.getElementById('offers');\r\n    const filterAll =  document.getElementById('offer_all');\r\n    const filterSelect =  document.getElementById('offer_select');\r\n    let filterSelectOn = false;\r\n    \r\n    const btnRefresh = document.querySelector(\"#refresh\");\r\n\r\n    setHandler();\r\n    userTableListener();\r\n    renderTableUsers();\r\n\r\n    function setHandler() {\r\n        // Debug test listener\r\n        //document.addEventListener( \"click\", function(e) {\r\n        //    console.log(e.target);\r\n        //});     \r\n        filterAll.addEventListener( \"click\", function(e) {\r\n            if (filterSelectOn) {\r\n                filterSelectOn = false;\r\n                renderTableUsers();  \r\n            }\r\n        });     \r\n        filterSelect.addEventListener( \"click\", function(e) {\r\n            if (!filterSelectOn) { \r\n                filterSelectOn = true;\r\n                renderTableUsers(state.userList.filter(arr => arr['roles_mask'] == 0));  \r\n            }\r\n        });    \r\n        btnRefresh.addEventListener( \"click\", getUsersFromDB);    \r\n    }\r\n \r\n    function getUsersFromDB() {\r\n        axios.get('/get/getUserList').then(res => {\r\n            state.userList = res.data;\r\n            console.log('state.userList', state.userList);\r\n           })\r\n           .then(() => {\r\n               console.log('Загрузка данных выполнена!');\r\n               renderTableUsers();\r\n          })   \r\n           .catch(function(error) {\r\n            console.log(\"Ошибка базы данных \" + error);\r\n         });\r\n    }   \r\n\r\n    function renderTableUsers(arr=state.userList) {\r\n        divTable.innerHTML = '';\r\n        if (arr.length != 0) {\r\n            arr.forEach(user => {\r\n                let classTable = user['roles_mask'] == 163856 ? 'table-success' : user['roles_mask'] == 131090 ? 'table-primary' : 'table-danger';\r\n                let nameRole = user['roles_mask'] == 163856 ? 'Заказчик' : user['roles_mask'] == 131090 ? 'Веб-мастер' : 'Не определен';\r\n                divTable.innerHTML += `\r\n                                <tr class=${classTable} data-id=${user['id']}>\r\n                                    <td>${user['username']}</td>\r\n                                    <td>${user['email']}</td>\r\n                                    <td id=\"role\">${nameRole}</td>\r\n                                </tr>`;\r\n                        });\r\n        }\r\n    }\r\n\r\n    function changeRole(id, selector, status) { \r\n        const subselector = selector.querySelector(\"#role\");\r\n        state.userList.forEach(arr => {\r\n            if (arr.id == id) {\r\n                if (status) {\r\n                    if (arr['roles_mask'] === 0) {\r\n                        arr['roles_mask'] =  131090;   \r\n                    } else {\r\n                        if (arr['roles_mask'] === 131090) {\r\n                            arr['roles_mask'] = 163856;   \r\n                        } else {\r\n                            arr['roles_mask'] = 131090;   \r\n                        }   \r\n                    }\r\n                } else {\r\n                    arr['roles_mask'] = 0;  \r\n                }\r\n                setRoleInDB(id, arr['roles_mask']);\r\n                switch (arr['roles_mask']) {\r\n                    case 0:\r\n                        selector.classList.add('table-danger');\r\n                        selector.classList.remove('table-success');\r\n                        selector.classList.remove('table-primary');   \r\n                        subselector.textContent = 'Не определен';\r\n                        break;\r\n                    case 163856:\r\n                        selector.classList.toggle('table-success');\r\n                        selector.classList.toggle('table-primary');\r\n                        subselector.textContent = 'Заказчик';\r\n                        break;\r\n                    case 131090:\r\n                        selector.classList.add('table-primary');   \r\n                        selector.classList.remove('table-danger');\r\n                        selector.classList.remove('table-success');\r\n                        subselector.textContent = 'Веб-мастер';\r\n                        break;\r\n                }              \r\n            }\r\n        });\r\n        if (filterSelectOn) { \r\n            renderTableUsers(state.userList.filter(arr => arr['roles_mask'] == 0));  \r\n        }\r\n    }\r\n\r\n    function setRoleInDB(id, role) {\r\n        axios({\r\n          method: 'post',\r\n          url: '/post/setRoleInDB',\r\n          headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\"\r\n        },\r\n          data:  {\"id\": id, \"roles_mask\": role}\r\n          })\r\n          .then(() => {\r\n              console.log('Роль пользователя успешно обновлен.');\r\n          })\r\n          .catch(function(error) {\r\n              console.log(error);\r\n          });\r\n    }\r\n    \r\n    function toggleClassTable(id, confirmText) {\r\n        const selector = \"[data-id=\" + '\"' + id + '\"]'; \r\n        const elemTable = document.querySelector(selector);\r\n        if (confirm(confirmText)) { \r\n            confirmText === 'Изменить роль?' ? changeRole(id, elemTable, true) : changeRole(id, elemTable, false);\r\n        } \r\n    }\r\n\r\n    function userTableListener() {\r\n        divTable.addEventListener( \"click\", function(e) {\r\n          toggleClassTable(getIdOnClick(e), \"Изменить роль?\");\r\n        });   \r\n        divTable.addEventListener('contextmenu', function(e)  {\r\n            e.preventDefault();\r\n            toggleClassTable(getIdOnClick(e), \"Отменить роль?\");  \r\n        })\r\n    }\r\n  \r\n    function getIdOnClick(e) { \r\n        let node = e.target;\r\n        let id;\r\n        do {\r\n            hasAttr(node, \"data-id\") ? id = node.getAttribute(\"data-id\") : node = node.parentNode;\r\n        } while (!id);\r\n        return id;\r\n    }\r\n    \r\n    function hasAttr(element, attr) {\r\n        if(typeof element === 'object' && element !== null && 'getAttribute' in element  && element.hasAttribute(attr)) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n    }\r\n    \r\n\r\n};\r\n\r\nexport default renderUsers;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import getState from \"./modules/getState\";\r\nimport makeGraf from \"./modules/makeGraf\";\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n   let state = {\r\n    userList: [],\r\n    yearLabels: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\r\n    monthLabels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'],\r\n    dayLabels: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23']\r\n   }; \r\n\r\n  getState(state);\r\n  \r\n  makeGraf(state, 'Доходы, руб', 'Переходы, клик');\r\n   \r\n});\r\n\r\n"],"names":[],"sourceRoot":""}